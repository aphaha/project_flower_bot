import telebot
from telebot import types

API_TOKEN = '7947805536:AAHMl3RuCqSIwSwOGQvuEXG_M32ZHcHkCwg'
bot = telebot.TeleBot(API_TOKEN)

ADMINS = [788277490]

catalog = {
    'roses': {'name': '–ß–µ—Ä–≤–æ–Ω—ñ —Ç—Ä–æ—è–Ω–¥–∏', 'price': 150, 'description': '–ë—É–∫–µ—Ç —ñ–∑ 9 —á–µ—Ä–≤–æ–Ω–∏—Ö —Ç—Ä–æ—è–Ω–¥'},
    'tulips': {'name': '–í–µ—Å–Ω—è–Ω—ñ —Ç—é–ª—å–ø–∞–Ω–∏', 'price': 120, 'description': '10 —Ä—ñ–∑–Ω–æ–∫–æ–ª—å–æ—Ä–æ–≤–∏—Ö —Ç—é–ª—å–ø–∞–Ω—ñ–≤'},
    'orchids': {'name': '–û—Ä—Ö—ñ–¥–µ—ó', 'price': 200, 'description': '–ï–ª–µ–≥–∞–Ω—Ç–Ω—ñ –±—ñ–ª—ñ –æ—Ä—Ö—ñ–¥–µ—ó'}
}

orders = []

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('/catalog', '/info', '/feedback', '/order')
    bot.send_message(message.chat.id, "üå∏ –í—ñ—Ç–∞—î–º–æ —É –±–æ—Ç—ñ –∫–≤—ñ—Ç–∫–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω—É!", reply_markup=markup)
    bot.send_message(message.chat.id, "–í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥ –∞–±–æ –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫.")

@bot.message_handler(commands=['info'])
def send_info(message):
    bot.send_message(message.chat.id, "–¶–µ–π –±–æ—Ç –¥–æ–∑–≤–æ–ª—è—î –∑–∞–º–æ–≤–∏—Ç–∏ –∫–≤—ñ—Ç–∏ –æ–Ω–ª–∞–π–Ω. –ú–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –∫—Ä–∞—Å–∏–≤—ñ –±—É–∫–µ—Ç–∏ –Ω–∞ –±—É–¥—å-—è–∫–∏–π —Å–º–∞–∫!")

@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.chat.id, "/start - –ü–æ—á–∞—Ç–∏\n/catalog - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –±—É–∫–µ—Ç–∏\n/info - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –º–∞–≥–∞–∑–∏–Ω\n/feedback - –ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫\n/order - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n/add_item - –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä (–∞–¥–º—ñ–Ω)\n/remove_item - –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä (–∞–¥–º—ñ–Ω)\n/orders - –£—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–∞–¥–º—ñ–Ω)")

@bot.message_handler(commands=['catalog'])
def send_catalog(message):
    markup = types.InlineKeyboardMarkup()
    for key, item in catalog.items():
        btn = types.InlineKeyboardButton(text=f"{item['name']} - {item['price']} –≥—Ä–Ω", callback_data=key)
        markup.add(btn)
    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –±—É–∫–µ—Ç:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data in catalog)
def show_item_details(call):
    item = catalog[call.data]
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(text="–ó–∞–º–æ–≤–∏—Ç–∏", callback_data=f"order_{call.data}"))
    bot.send_message(call.message.chat.id, f"{item['name']}\n{item['description']}\n–¶—ñ–Ω–∞: {item['price']} –≥—Ä–Ω", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("order_"))
def confirm_order(call):
    item_key = call.data.split('_')[1]
    item = catalog[item_key]
    user = call.from_user
    order = {
        'user_id': user.id,
        'username': user.username,
        'item': item['name'],
        'price': item['price'],
        'status': '–æ—á—ñ–∫—É—î –æ–ø–ª–∞—Ç—É'
    }
    orders.append(order)
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç–∏", callback_data=f"pay_{len(orders)-1}"))
    bot.send_message(call.message.chat.id, "üå∑ –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –æ–ø–ª–∞—Ç–∏—Ç–∏.", reply_markup=markup)
    for admin_id in ADMINS:
        bot.send_message(admin_id, f"–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: @{user.username} (ID: {user.id})\n–¢–æ–≤–∞—Ä: {item['name']} - {item['price']} –≥—Ä–Ω")

@bot.callback_query_handler(func=lambda call: call.data.startswith("pay_"))
def fake_payment(call):
    index = int(call.data.split('_')[1])
    if 0 <= index < len(orders):
        orders[index]['status'] = '–æ–ø–ª–∞—á–µ–Ω–æ'
        bot.send_message(call.message.chat.id, "‚úÖ –û–ø–ª–∞—Ç—É –æ—Ç—Ä–∏–º–∞–Ω–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–¥–µ –æ–±—Ä–æ–±–ª–µ–Ω–æ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.")
        for admin_id in ADMINS:
            bot.send_message(admin_id, f"üí∞ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ{index+1} –æ–ø–ª–∞—á–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º @{call.from_user.username}.")

@bot.message_handler(commands=['order'])
def show_order_instruction(message):
    bot.send_message(message.chat.id, "–©–æ–± –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –ø–µ—Ä–µ–π–¥—ñ—Ç—å —É /catalog, –æ–±–µ—Ä—ñ—Ç—å –±—É–∫–µ—Ç —Ç–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É '–ó–∞–º–æ–≤–∏—Ç–∏'.")

@bot.message_handler(commands=['feedback'])
def get_feedback(message):
    msg = bot.send_message(message.chat.id, "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫:")
    bot.register_next_step_handler(msg, process_feedback)

def process_feedback(message):
    for admin_id in ADMINS:
        bot.send_message(admin_id, f"–í—ñ–¥–≥—É–∫ –≤—ñ–¥ @{message.from_user.username}:\n{message.text}")
    bot.send_message(message.chat.id, "–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!")

@bot.message_handler(commands=['admin'])
def admin_panel(message):
    if message.from_user.id in ADMINS:
        bot.send_message(message.chat.id, "üîê –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å:\n/add_item - –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä\n/remove_item - –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä\n/orders - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")

@bot.message_handler(commands=['add_item'])
def add_item(message):
    if message.from_user.id in ADMINS:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É, –æ–ø–∏—Å —ñ —Ü—ñ–Ω—É —É —Ñ–æ—Ä–º–∞—Ç—ñ:\n–Ω–∞–∑–≤–∞;–æ–ø–∏—Å;—Ü—ñ–Ω–∞")
        bot.register_next_step_handler(msg, process_add_item)
    else:
        bot.send_message(message.chat.id, "‚õî –í–∏ –Ω–µ –º–∞—î—Ç–µ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó.")

def process_add_item(message):
    try:
        name, desc, price = message.text.split(';')
        key = name.lower().replace(' ', '_')
        catalog[key] = {'name': name, 'description': desc, 'price': int(price)}
        bot.send_message(message.chat.id, f"‚úÖ –¢–æ–≤–∞—Ä '{name}' –¥–æ–¥–∞–Ω–æ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É.")
    except:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–º–∏–ª–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ —É —Ñ–æ—Ä–º–∞—Ç—ñ: –Ω–∞–∑–≤–∞;–æ–ø–∏—Å;—Ü—ñ–Ω–∞")

@bot.message_handler(commands=['remove_item'])
def remove_item(message):
    if message.from_user.id in ADMINS:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∫–ª—é—á —Ç–æ–≤–∞—Ä—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, roses):")
        bot.register_next_step_handler(msg, process_remove_item)
    else:
        bot.send_message(message.chat.id, "‚õî –í–∏ –Ω–µ –º–∞—î—Ç–µ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó.")

def process_remove_item(message):
    key = message.text.strip()
    if key in catalog:
        del catalog[key]
        bot.send_message(message.chat.id, f"‚úÖ –¢–æ–≤–∞—Ä '{key}' –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–∞—Ç–∞–ª–æ–≥—É.")
    else:
        bot.send_message(message.chat.id, f"‚ùå –¢–æ–≤–∞—Ä –∑ –∫–ª—é—á–µ–º '{key}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

@bot.message_handler(commands=['orders'])
def show_orders(message):
    if message.from_user.id in ADMINS:
        if orders:
            for i, o in enumerate(orders, 1):
                bot.send_message(message.chat.id, f"{i}. @{o['username']} - {o['item']} ({o['price']} –≥—Ä–Ω) - –°—Ç–∞—Ç—É—Å: {o.get('status', '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ')}")
        else:
            bot.send_message(message.chat.id, "–ù–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å.")
    else:
        bot.send_message(message.chat.id, "‚õî –í–∏ –Ω–µ –º–∞—î—Ç–µ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")

@bot.message_handler(commands=['hello'])
def say_hello(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –†–∞–¥–∏–π –≤–∞—Å –±–∞—á–∏—Ç–∏ üåº")

@bot.message_handler(func=lambda message: message.text.lower() in ["—è–∫ –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?", "—è–∫ –∑–∞–º–æ–≤–∏—Ç–∏?"])
def answer_order_question(message):
    bot.send_message(message.chat.id, "–©–æ–± –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: \n1. –í–≤–µ–¥—ñ—Ç—å /catalog.\n2. –û–±–µ—Ä—ñ—Ç—å –±—É–∫–µ—Ç.\n3. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É '–ó–∞–º–æ–≤–∏—Ç–∏'.")

print("Bot is running...")
bot.infinity_polling()